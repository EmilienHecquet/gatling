name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install NestJS dependencies
      run: cd test-and-quality-bowling-score && npm install

    - name: Ensure Jest has execute permissions
      run: chmod +x ./node_modules/.bin/jest
      working-directory: test-and-quality-bowling-score

    - name: Run NestJS Unit Tests
      run: cd test-and-quality-bowling-score && npx jest

    - name: Set up JDK 22
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '22'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven

    - name: Build Gatling Project with Maven
      run: cd api-performance-test && mvn -B clean install -DskipTests=true

    - name: Run Gatling Load Tests
      run: cd api-performance-test && mvn gatling:test '-DclassName=tests.SmokeTest'

    - name: Check for test failures
      run: |
        TOTAL_TESTS=$(grep -oP '(?<=ALL\s\|).*?(?=\s)' api-performance-test/target/gatling/**/simulation.log | wc -l)
        FAILED_TESTS=$(grep -oP '(?<=KO\s\|).*?(?=\s)' api-performance-test/target/gatling/**/simulation.log | wc -l)
        if [ "$TOTAL_TESTS" -eq 0 ]; then
          echo "No tests found. Failing the job."
          exit 1
        fi
        FAILURE_PERCENTAGE=$(echo "scale=2; $FAILED_TESTS/$TOTAL_TESTS*100" | bc)
        echo "Total tests: $TOTAL_TESTS"
        echo "Failed tests: $FAILED_TESTS"
        echo "Failure percentage: $FAILURE_PERCENTAGE%"
        if (( $(echo "$FAILURE_PERCENTAGE > 80" | bc -l) )); then
          echo "More than 80% test failures. Failing the job."
          exit 1
        fi
